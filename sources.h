// this file was auto generated by process_shader.py
// do not modify this file
#ifndef SOURCES_H
#define SOURCES_H
const char note_vert_src[] =
"#version 460 core\n"
"layout(location = 0) in ivec2 pix;\n"
"layout(location = 0) uniform vec2 scrSize = vec2(400, 600);\n"
"layout(location = 2) uniform vec3 color = vec3(1.0, 0.0, 0.0);\n"
"out vec3 oColor;\n"
"void main() {\n"
"	oColor = color;\n"
"	vec2 norm = 2.0 * vec2(pix) / scrSize - 1.0;\n"
"	gl_Position = vec4(norm, 0.0, 1.0);\n"
"}\n";
const char note_frag_src[] =
"#version 460 core\n"
"in vec3 oColor;\n"
"out vec4 frag_col;\n"
"void main() {\n"
"	frag_col = vec4(oColor, 1.0);\n"
"}\n";
const char highlight_vert_src[] =
"#version 460 core\n"
"layout(location = 0) in vec2 aPos;\n"
"layout(location = 1) in vec2 aTexCoords;\n"
"out vec2 texCoords;\n"
"void main() {\n"
"	gl_Position = vec4(aPos, 0.0, 1.0);\n"
"	texCoords = aTexCoords;\n"
"}\n";
const char highlight_frag_src[] =
"#version 460 core\n"
"out vec4 fragColor;\n"
"in vec2 texCoords;\n"
"uniform sampler2D tex;\n"
"layout(location = 0) uniform float nCols;\n"
"layout(location = 1) uniform uint now;\n"
"layout(location = 2) uniform uint times[8];\n"
"void main() {\n"
"	uint t = now - times[int(texCoords.x * nCols)];\n"
"	vec3 col = texture(tex, texCoords).rgb;\n"
"	const uint flashDuration = 250;\n"
"	if (t < flashDuration) {\n"
"		vec3 flash;\n"
"		if (texCoords.y <= 0.2) {\n"
"			flash = mix(col, vec3(0.486, 0.729, 0.815), 2.0 * (0.2 - texCoords.y));\n"
"		} else {\n"
"			float x = 1.25 - 1.25 * texCoords.y;\n"
"			flash = mix(col, vec3(1.0), (1.0 - x * x) * 0.15);\n"
"		}\n"
"		col = mix(col, flash, 1.0 - float(t) / float(flashDuration));\n"
"	}\n"
"	fragColor = vec4(col, 1.0);\n"
"}\n";
#endif
